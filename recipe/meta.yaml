{% set version = "1.7.0" %}

{% set libarchive_version = "3.3.3" %}
# 3.4.0 breaks some symlink stuff on macos.  Holding back for now.

{% set zlib_version = "1.2.11" %}
{% set bzip2_version = "1.0.8" %}
{% set zstd_version = "1.4.5" %}
{% set xz_version = "5.2.5" %}
{% set lz4_c_version = "1.9.2" %}
{% set libiconv_version = "1.15" %}  # [osx]

package:
  name: conda-package-handling-build
  version: {{ version }}

source:
  - url: https://github.com/conda/conda-package-handling/archive/{{ version }}.tar.gz
    sha256: 56fba119552f1796df5bdd21fa11c03cc2b2fcd489d1cfb2f57ad9c8d7ed9c88
    folder: cph

  - url: http://zlib.net/zlib-{{ zlib_version }}.tar.gz
    sha256: c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1
    folder: zlib

  - url: https://sourceware.org/pub/bzip2/bzip2-{{ bzip2_version }}.tar.gz
    sha256: ab5a03176ee106d3f0fa90e381da478ddae405918153cca248e682cd0c4a2269
    folder: bzip2
    patches:
      - bzip2-patches/0001-cross.patch

  - url: https://github.com/facebook/zstd/releases/download/v{{ zstd_version }}/zstd-{{ zstd_version }}.tar.gz
    sha256: 98e91c7c6bf162bf90e4e70fdbc41a8188b9fa8de5ad840c401198014406ce9e
    folder: zstd
    patches:
      - zstd-patches/utime-aarch64.patch  # [aarch64]

  - url: http://downloads.sourceforge.net/project/lzmautils/xz-{{ xz_version }}.tar.bz2
    sha256: 5117f930900b341493827d63aa910ff5e011e0b994197c3b71c08a20228a42df
    folder: xz
    patches:
      - xz-patches/0001-Add-vs2008-support-via-cmake.patch
      - xz-patches/0002-Add-gettimeofday-for-VS2008.patch

  - url: https://github.com/lz4/lz4/archive/v{{ lz4_c_version }}.tar.gz
    sha256: 658ba6191fa44c92280d4aa2c271b0f4fbc0e34d249578dd05e50e76d0e5efcc
    folder: lz4_c
    patches:
      # Split into 2 patches due to a bug in conda-build
      # - lz4-c-patches/0001-Add-WindowsTargetPlatformVersion-of-10.0-and-lz4-exe.patch
      - lz4-c-patches/0001-Add-WindowsTargetPlatformVersion-of-10.0-and-lz4-exe.1.patch
      - lz4-c-patches/0001-Add-WindowsTargetPlatformVersion-of-10.0-and-lz4-exe.2.patch
      # fullbench build used to cause "an internal compiler error".
      # - lz4-c-patches/0002-Do-not-build-tests-binaries-on-VS-project.patch  # [win]

  - url: http://ftp.gnu.org/pub/gnu/libiconv/libiconv-{{ libiconv_version }}.tar.gz  # [osx]
    sha256: ccf536620a45458d26ba83887a983b96827001e92a13847b45e4925cc8913178         # [osx]
    folder: libiconv                                                                 # [osx]

  - url: https://github.com/libarchive/libarchive/releases/download/v{{ libarchive_version }}/libarchive-{{ libarchive_version }}.tar.gz
    sha256: ba7eb1781c9fbbae178c4c6bad1c6eb08edab9a1496c64833d1715d022b30e2e
    folder: libarchive
    patches:
      - libarchive-patches/0001-Add-lib-to-CMAKE_FIND_LIBRARY_PREFIXES-for-lzma.patch
      - libarchive-patches/0002-xar-fix-bad-seek-in-move_reading_point.patch
      - libarchive-patches/0003-VC9-compatibility-test-for-BCryptDeriveKeyPBKDF2.patch
      - libarchive-patches/0004-VC9-compatibility-define-BCRYPT_SUCCESS.patch
      # This should not be applied in general. It exists so I can build it for
      # debugging Visual Studio where warnings are errors for some reason.
      # Hiding warnings is poor practice.
      # - libarchive-patches/0005-VC9-compatibility-ignore-some-warnings.patch
      - libarchive-patches/0006-VC-openssl-define-inline-as-__inline.patch
      # These warnings are errors when compiling lz-4 support
      - libarchive-patches/0007-CMake-VC9-compatibility-ignore-some-warnings.patch
      - libarchive-patches/0008-VC9-compatibility-remove-C99.patch
      - libarchive-patches/0009-CMake-Force-Multi-threaded-DLL-runtime.patch
      # 3.4.0 added official support for symlinks on win
      - libarchive-patches/0010-Use-CreateSymbolicLinkW-on-Windows-for-symlinks-WIP.patch

build:
  number: 4

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - autoconf    # [unix]
    - automake    # [unix]
    - libtool     # [unix]
    - pkg-config  # [unix]
    - cmake
    - make        # [unix]
    - m2-patch    # [win]
    - patch       # [unix]
    - jom         # [win]
    - ninja       # [win]
    - m2-gcc-libs  # [win]

outputs:
  - name: conda-package-handling
    version: {{ version }}
    script: cph-build.sh  # [unix]
    script: cph-bld.bat   # [win]
    build:
      entry_points:
        - cph = conda_package_handling.cli:main
      # HACK: case-sensitive mismatch in latest conda-build
      missing_dso_whitelist:
        - Library/bin/VCRUNTIME140.dll    # [win]
        - "*/VCRUNTIME140.dll"            # [win]
        - "*/MSVCR90.dll"                 # [win]
        - "MSVCR90.dll"                   # [win]

    requirements:
      build:
        - {{ compiler('c') }}
      host:
        - python
        - pip
        - cython
      run:
        - python
        - six
        - tqdm

    test:
      source_files:
        - cph/tests
      requires:
        - mock
        - pytest
        - pytest-cov
        - pytest-mock
      imports:
        - conda_package_handling
        - conda_package_handling.archive_utils_cy
      commands:
        # This test is skipped until Dec 2019 which is weird. Skip for now.
        - pytest cph/tests -k "not test_secure_refusal_to_extract_abs_paths"

about:
  home: https://github.com/conda/conda-package-handling
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - cph/LICENSE
    - static_deps_licenses/bzip2.txt
    - static_deps_licenses/libarchive.txt
    - static_deps_licenses/zlib.txt
    - static_deps_licenses/zstd.txt
    - static_deps_licenses/libiconv.txt    # [osx]
    - xz/COPYING
    - xz/COPYING.GPLv2
    - xz/COPYING.GPLv3
    - xz/COPYING.LGPLv2.1
    - lz4_c/lib/LICENSE
  summary: Create and extract conda packages of various formats

extra:
  recipe-maintainers:
    - jjhelmus
    - msarahan
    - beckermr
